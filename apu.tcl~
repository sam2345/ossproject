# This script is created by NSG2 beta1
# <http://wushoupong.googlepages.com/nsg>

#===================================
#     Simulation parameters setup
#===================================
set val(chan)   Channel/WirelessChannel    ;# channel type
set val(prop)   Propagation/TwoRayGround   ;# radio-propagation model
set val(netif)  Phy/WirelessPhy            ;# network interface type
set val(mac)    Mac/802_11                 ;# MAC type
set val(ifq)    Queue/DropTail/PriQueue    ;# interface queue type
set val(ll)     LL                         ;# link layer type
set val(ant)    Antenna/OmniAntenna        ;# antenna model
set val(ifqlen) 50                         ;# max packet in ifq
set val(nn)     15                         ;# number of mobilenodes
set val(rp)     AODV                       ;# routing protocol
set val(x)      1100                      ;# X dimension of topography
set val(y)      605                      ;# Y dimension of topography
set val(stop)   10.0                         ;# time of simulation end

#===================================
#        Initialization        
#===================================
#Create a ns simulator
set ns [new Simulator]



#Open the NS trace file
set tracefile [open out.tr w]
set namfile [open out.nam w]
$ns trace-all $tracefile
$ns namtrace-all-wireless $namfile $val(x) $val(y)

#Setup topography object
set topo       [new Topography]
$topo load_flatgrid $val(x) $val(y)
create-god $val(nn)

#===================================
#     Mobile node parameter setup
#===================================
$ns node-config -adhocRouting  $val(rp) \
                -llType        $val(ll) \
                -macType       $val(mac) \
                -ifqType       $val(ifq) \
                -ifqLen        $val(ifqlen) \
                -antType       $val(ant) \
                -propType      $val(prop) \
                -phyType       $val(netif) \
                -topoInstance  $topo \
                -agentTrace    ON \
                -routerTrace   ON \
                -macTrace      ON \
                -movementTrace ON

#===================================
#        Nodes Definition        
#===================================

# Creating node objects..           
for {set i 0} {$i < $val(nn) } { incr i } {
            set node_($i) [$ns node]     
      }
      for {set i 0} {$i < $val(nn)  } {incr i } {
            $node_($i) color cyan
            $ns at 0.0 "$node_($i) color cyan"
      }

#Create 15 nodes
$node_(0) set X_ 158
$node_(0) set Y_ 340
$node_(0) set Z_ 0.0
$node_(1) set X_ 310
$node_(1) set Y_ 423
$node_(1) set Z_ 0.0
$node_(2) set X_ 494
$node_(2) set Y_ 432
$node_(2) set Z_ 0.0
$node_(3) set X_ 251
$node_(3) set Y_ 225
$node_(3) set Z_ 0.0
$node_(4) set X_ 404
$node_(4) set Y_ 168
$node_(4) set Z_ 0.0
$node_(5) set X_ 446
$node_(5) set Y_ 310
$node_(5) set Z_ 0.0
$node_(6) set X_ 579
$node_(6) set Y_ 383
$node_(6) set Z_ 0.0
$node_(7) set X_ 643
$node_(7) set Y_ 505
$node_(7) set Z_ 0.0
$node_(8) set X_ 798
$node_(8) set Y_ 303
$node_(8) set Z_ 0.0
$node_(9) set X_ 609
$node_(9) set Y_ 190
$node_(9) set Z_ 0.0
$node_(10) set X_ 574
$node_(10) set Y_ 113
$node_(10) set Z_ 0.0
$node_(11) set X_ 731
$node_(11) set Y_ 411
$node_(11) set Z_ 0.0
$node_(12) set X_ 873
$node_(12) set Y_ 456
$node_(12) set Z_ 0.0
$node_(13) set X_ 917
$node_(13) set Y_ 270
$node_(13) set Z_ 0.0
$node_(14) set X_ 826
$node_(14) set Y_ 103
$node_(14) set Z_ 0.0

for {set i 0} {$i < $val(nn)} { incr i } {
$ns initial_node_pos $node_($i) 20
}

#===================================
#        Generate movement          
#===================================
#$ns at 0.5 " $n0 setdest 917 270 80 " 
#$ns at 0.5 " $n1 setdest 404 160 80 " 
#$ns at 0.5 " $n2 setdest 574 113 70 " 
#$ns at 0.5 " $n3 setdest 843 505 90 " 
#$ns at 0.5 " $n4 setdest 873 456 60 " 
#$ns at 0.5 " $n5 setdest 579 383 50 " 
#$ns at 0.5 " $n6 setdest 251 255 80 " 
#$ns at 0.5 " $n7 setdest 917 270 60 " 
#$ns at 0.5 " $n8 setdest 1000 270 80 " 
#$ns at 0.5 " $n9 setdest 310 423 80 " 
#$ns at 0.5 " $n10 setdest 158 340 90 " 
#$ns at 0.5 " $n11 setdest 826 103 70 " 
#$ns at 0.5 " $n12 setdest 1000 100 90 " 
#$ns at 0.5 " $n13 setdest 158 340 90 " 
#$ns at 0.5 " $n14 setdest 1000 500 70 " 

#===================================
#        Agents Definition        
#===================================
#Setup a TCP connection
#$set tcp0 [new Agent/TCP]
#$$ns attach-agent $n0 $tcp0
#set sink1 [new Agent/TCPSink]
#$ns attach-agent $n13 $sink1
#$ns connect $tcp0 $sink1
#$tcp0 set packetSize_ 1500


#===================================
#        Applications Definition        
#===================================
#Setup a FTP Application over TCP connection
#set ftp1 [new Application/FTP]
#$ftp1 attach-agent $tcp0
#$ns at 0.5 "$ftp1 start"
#$ns at 90.0 "$ftp1 stop"


#===================================
#        Termination        
#===================================
#Define a 'finish' procedure

for {set i 0} {$i < $val(nn) } { incr i } {
    $ns at $val(stop) "\$node_($i)reset";
}
$ns at $val(stop) "$ns nam-end-wireless $val(stop)"
$ns at $val(stop) "stop"
$ns at 90.00 "puts \"done\" ; $ns halt"

proc finish {} {
    global ns tracefile namfile
    $ns flush-trace
    close $tracefile
    close $namfile
    exec nam out.nam &
    exit 0
}

$ns run
